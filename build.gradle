
plugins{                                                                         
    id 'java'
    id 'application'
    id 'distribution'
}
compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

mainClassName = 'gov.ca.dwr.callite.Main'

repositories {
    maven {
        // The HEC Public repository where a lot of base dependencies are stored like hec-monolith
        url 'https://www.hec.usace.army.mil/nexus/repository/maven-public'
    }
    mavenCentral()
}

dependencies {
    implementation libs.hec.monolith
    implementation libs.hec.nucleus.metadata
    implementation 'org.swinglabs:pdf-renderer:1.0.5'
    implementation 'dom4j:dom4j:1.6.1'
    implementation 'crimson:crimson:1.1.3'
    // implementation 'org.jfree:jfreechart:1.5.4'
    implementation files('dep-local/jfreechart.jar')
    implementation files('dep-local/dsm2-input-model.jar')
    implementation files('dep-local/iText.jar')
    implementation files('dep-local/itext-hyph-xml.jar')
    runtimeOnly 'mil.army.usace.hec:javaHeclib:7-IS-2-win-x86_64@zip'
}

task extractDll(type: Copy) {
    def zipFile = configurations.runtimeClasspath.find { it.name.endsWith('.zip') }
    from zipTree(zipFile)
    into "$buildDir/dll"
}
startScripts {
    doLast {
        windowsScript.text = windowsScript.text.replace('set DEFAULT_JVM_OPTS=', 'set DEFAULT_JVM_OPTS=-Djava.library.path=%~dp0\\..\\dll')
    }
}
tasks.named('distTar').configure{enabled = false}
distributions {
    main {
        contents {
            into('dll'){
                from "$buildDir/dll"
            }
        }
    }
}
distZip.dependsOn extractDll
distTar.dependsOn extractDll